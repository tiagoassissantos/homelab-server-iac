---
- name: Configure Alpine Linux k3s Server
  hosts: masters
  become: true
  gather_facts: true
  vars:
    ansible_python_interpreter: /usr/bin/python3

  tasks:
    # === System Prerequisites ===
    - name: Update apk cache
      apk:
        update_cache: yes

    - name: Install base packages
      apk:
        name:
          - curl
          - wget
          - git
          - python3
          - py3-pip
          - py3-yaml
          - py3-kubernetes
          - py3-cryptography
          - py3-setuptools
          - openssl
          - ca-certificates
          - nftables
          - cni-plugins
          - containerd
          - runc
          - zsh
          - shadow
          - bash
        state: present

    # === Configure zsh and oh-my-zsh ===
    - name: Change shell to zsh for user
      user:
        name: "{{ ansible_user }}"
        shell: /bin/zsh

    - name: Install oh-my-zsh
      shell: |
        if [ ! -d "/home/{{ ansible_user }}/.oh-my-zsh" ]; then
          su - {{ ansible_user }} -c 'sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended'
        fi
      args:
        creates: "/home/{{ ansible_user }}/.oh-my-zsh"

    - name: Set zsh theme to robbyrussell
      lineinfile:
        path: "/home/{{ ansible_user }}/.zshrc"
        regexp: "^ZSH_THEME="
        line: 'ZSH_THEME="robbyrussell"'
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    # === Kernel Modules for k3s ===
    - name: Load required kernel modules
      modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - overlay
        - br_netfilter
        - nf_conntrack
        - nf_nat
        - nf_tables
        - nfnetlink
        - xt_REDIRECT
        - xt_owner

    - name: Ensure kernel modules load on boot
      lineinfile:
        path: /etc/modules-load.d/k3s.conf
        line: "{{ item }}"
        create: yes
      loop:
        - overlay
        - br_netfilter
        - nf_conntrack
        - nf_nat
        - nf_tables
        - nfnetlink
        - xt_REDIRECT
        - xt_owner

    # === Sysctl settings ===
    - include_tasks: templates/configure_sysctl_k3s.yaml

    # === Configure Firewall ===
    - include_tasks: templates/configure_firewall.yaml

    # === Install k3s ===
    - include_tasks: templates/install_k3s.yaml

    # === Install Helm ===
    - include_tasks: templates/install_helm.yaml

    # === Install MetalLB ===
    - include_tasks: templates/install_metallb.yaml

    # === Install cert-manager ===
    - include_tasks: templates/install_cert_manager.yaml

    # === Install Docker Registry ===
    - include_tasks: templates/install_registry.yaml

    # === Install Pi-hole ===
    - include_tasks: templates/install_pihole.yaml

    # === Configure k3s to use Pi-hole as DNS ===
    - include_tasks: templates/configure_k3s_dns.yaml

    # === Install Argo Workflows ===
    - include_tasks: templates/install_argo_workflows.yaml

    # === Create Argo Workflows Access Token ===
    - include_tasks: templates/create_argo_token.yaml

  handlers:
    - name: restart systemd-resolved
      service:
        name: systemd-resolved
        state: restarted
      ignore_errors: true
